name: build-and-deploy-s3

on:
  push:
    branches: [ master ]

jobs:
  build-drupal:
    runs-on: ubuntu-latest
    steps:
      - name: Use actions/checkout@v2
        uses: actions/checkout@v2

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          key: composer-deps-${{ hashFiles('composer.json') }}
          path: |
            drush/
            vendor/
            web/core/
            web/modules/contrib/
            web/profiles/contrib/
            web/themes/contrib/
            web/libraries/
            web/.ht.router.php
            web/.htaccess
            web/autoload.php
            web/index.php
            web/update.php
            web/web.config

      - name: Install composer dependencies
        run: composer install --no-interaction --no-dev

  build-theme:
    runs-on: ubuntu-latest
    env:
      THEME_PATH: web/themes/custom/test_theme
    steps:
      - name: Use actions/checkout@v2
        uses: actions/checkout@v2

      - name: Cache node dependencies
        uses: actions/cache@v2
        with:
          key: node-deps-${{ hashFiles('composer.json') }}
          path: ${{ env.THEME_PATH }}/node_modules

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install node dependencies
        working-directory: ${{ env.THEME_PATH }}
        run: npm install

      - name: Build theme
        working-directory: ${{ env.THEME_PATH }}
        run: npm run sass-compile

      - name: Upload theme artifacts
        uses: actions/upload-artifact@v2
        with:
          name: theme-css
          path: ${{ env.THEME_PATH }}/css/

  deploy:
    runs-on: ubuntu-latest
    needs: [build-drupal, build-theme]
    steps:
      - name: Use actions/checkout@v2
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }} # if you have/need it
          aws-region: ca-central-1

      # - name: Copy files to S3 with the AWS CLI
      #   run: |
      #     zip -y -q -x ".git/*" -r deploy.zip .
      #     aws s3 sync . s3://${{ secrets.AWS_S3_BUCKET }}/${{ secrets.AWS_S3_DEPLOY_FILEPATH }}
